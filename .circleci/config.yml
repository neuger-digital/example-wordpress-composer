# https://circleci.com/docs/2.0/workflows/#using-workspaces-to-share-data-among-jobs

defaults: &defaults
  docker:
    - image: quay.io/pantheon-public/build-tools-ci:6.x
  working_directory: ~/wordpress-composer
  environment:
    #=========================================================================
    # In addition to the environment variables defined in this file, also
    # add the following variables in the Circle CI UI.
    #
    # See: https://circleci.com/docs/2.0/env-vars/
    #
    # TERMINUS_SITE:  Name of the Pantheon site to run tests on, e.g. my_site
    # TERMINUS_TOKEN: The Pantheon machine token
    # GITHUB_TOKEN:   The GitHub personal access token
    # GIT_EMAIL:    The email address to use when making commits
    #
    # TEST_SITE_NAME: The name of the test site to provide when installing.
    # ADMIN_PASSWORD: The admin password to use when installing.
    # ADMIN_EMAIL:  The email address to give the admin when installing.
    #=========================================================================
    TZ: "/usr/share/zoneinfo/America/Chicago"
  
    # The variables below usually do not need to be modified.
  
    #======================================================================================================================================
    # Circle CI 2.0 does not yet expand environment variables so they have to be manually EXPORTed
    # Once environment variables can be expanded the variables below can be uncommented and the EXPORTs in set-up-globals.sh can be removed
    # See: https://discuss.circleci.com/t/unclear-how-to-work-with-user-variables-circleci-provided-env-variables/12810/11
    # See: https://discuss.circleci.com/t/environment-variable-expansion-in-working-directory/11322
    # See: https://discuss.circleci.com/t/circle-2-0-global-environment-variables/8681
    #======================================================================================================================================
  
    NOTIFY: 'scripts/github/add-commit-comment {project} {sha} "Created multidev environment [{site}#{env}]({dashboard-url})." {site-url}'
    ADMIN_USERNAME: admin
    TERM: dumb

version: 2
jobs:
  configure_env_vars:
    <<: *defaults

    steps:
      - checkout

      - run:
          # Set TERMINUS_ENV and related environment variables.
          # https://github.com/pantheon-systems/docker-build-tools-ci/blob/6.x/scripts/set-environment
          name: setup-environment-vars
          command: /build-tools-ci/scripts/set-environment

      - run:
          name: clone-bash-env
          command: cp $BASH_ENV bash_env.txt

      # https://circleci.com/docs/2.0/workflows/#using-workspaces-to-share-data-among-jobs
      - persist_to_workspace:
          root: .
          paths:
            - bash_env.txt

  static_tests:
    <<: *defaults

    steps:
      - checkout

      - restore_cache:
          keys:
            - wordpress-composer-composer-cache-{{ checksum "composer.lock" }}
            - wordpress-composer-composer-cache-

      - run:
          # Set TERMINUS_ENV and related environment variables.
          # https://github.com/pantheon-systems/docker-build-tools-ci/blob/6.x/scripts/set-environment
          name: setup-environment-vars
          command: /build-tools-ci/scripts/set-environment

      - run:
          name: run static tests
          command: ./.ci/test/static/run

      - save_cache:
          key: wordpress-composer-composer-cache-{{ checksum "composer.lock" }}
          paths:
            - ./

  build_php:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          keys:
            - wordpress-composer-vendor-{{ checksum "composer.lock" }}
            - wordpress-composer-vendor-

      - run:
          # Set TERMINUS_ENV and related environment variables.
          # https://github.com/pantheon-systems/docker-build-tools-ci/blob/6.x/scripts/set-environment
          name: setup-environment-vars
          command: /build-tools-ci/scripts/set-environment

      - run:
          name: run PHP build step
          command: ./.ci/build/php

      - save_cache:
          key: wordpress-composer-vendor-{{ checksum "composer.lock" }}
          paths:
            - ./vendor

      - persist_to_workspace:
          root: .
          paths:
            - web
            - vendor

  build_frontend:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
         key: wordpress-composer-dependency-cache-{{ .Environment.CIRCLE_SHA1 }}

      - run:
          name: npm-install
          command: 'cd ./web/lib/ && npm ci'

      - save_cache:
         key: wordpress-composer-dependency-cache-{{ .Environment.CIRCLE_SHA1 }}
         paths:
           - ./web/lib/

      - run:
          name: npm-build
          command: ./.ci/build/frontend

      - persist_to_workspace:
          root: .
          paths:
            - web/js
            - web/css

  deploy_to_pantheon:
    <<: *defaults
    steps:
      - checkout

      # Attach the workspace
      - attach_workspace:
          at: /tmp

      - run:
          # Set TERMINUS_ENV and related environment variables.
          # https://github.com/pantheon-systems/docker-build-tools-ci/blob/6.x/scripts/set-environment
          name: setup-environment-vars
          command: /build-tools-ci/scripts/set-environment

      # Rsync the build artifact pieces web directory
      - run:
          name: sync build artifact
          command: rsync -rz /tmp/web /tmp/vendor .

      # Deploy to Pantheon
      - run:
          name: deploy to Pantheon
          command: ./.ci/deploy/pantheon/dev-multidev

  composer_lock_updater:
    <<: *defaults
    steps:
      - checkout

      - run:
          # Set TERMINUS_ENV and related environment variables.
          # https://github.com/pantheon-systems/docker-build-tools-ci/blob/6.x/scripts/set-environment
          name: setup-environment-vars
          command: /build-tools-ci/scripts/set-environment

      - run:
          name: Authenticate with Terminus
          command: terminus -n auth:login --machine-token="$TERMINUS_TOKEN"

      - run:
          name: run composer lock updater
          command: set -e && terminus project:clu $TERMINUS_SITE

workflows:
  version: 2
  build_deploy_and_test:
    jobs:
      - configure_env_vars
      - static_tests
      - build_php
      #- build_frontend
      #- deploy_to_pantheon:
      #    requires:
      #      - static_tests
      #      - build_php
      #      - build_frontend

#   scheduled_update_check:
#     triggers:
#        - schedule:
#            cron: "0 0 * * *"
#            filters:
#              branches:
#               only:
#                 - master
#     jobs:
#       - composer_lock_updater
